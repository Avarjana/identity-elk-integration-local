input {
	beats {
    		port => "5044"
  	}
}

filter {
	if " Event:" not in [message] {
	  drop {}
	}
	grok {
		ecs_compatibility => disabled
		match => {
			'message' => 'Unique ID: %{GREEDYDATA:eventType},\n Event: %{GREEDYDATA:eventdata}'
		}
	}
	json {
		ecs_compatibility => disabled
		source => "eventdata"
		remove_field => ["eventdata","message"]
	}

	#geo ip filter to transform the IP address to location
	geoip {
		ecs_compatibility => disabled
		source => "[event][payloadData][remoteIp]"
	}

	if [event][payloadData][identityProvider] == "LOCAL" {
		mutate {
        	update => { 
				"[event][payloadData][identityProvider]" => "Resident"
			}
      	}
	}

	#ruby code to convert the comma seperated roles into an array
	ruby{
	     code =>"

		 # method to split the supplied string by comma, trim whitespace and return an array
		 def mapStringToArray(strFieldValue)

		    #if string is not null, return array
		    if (strFieldValue != nil)
		        fieldArr =  strFieldValue.split(',').map(&:strip).reject(&:empty?).uniq 
		        return fieldArr                             
		    end     

		    return [] #return empty array if string is nil
		 end

		 vrtArr = mapStringToArray(event.get('[event][payloadData][rolesCommaSeparated]'))
		 if vrtArr.length > 0                           
		    event.set('[event][payloadData][rolesCommaSeparated]', vrtArr) 
		 end
	"
	}

	# debug timestamp
	if ("" in [mtime]) {
		date {
    			match => [ "mtime" , "yyyy-MM-dd HH:mm:ss.SSS" ]
    			target => "@timestamp"
			locale => "en"
			timezone => "Asia/Colombo"
		}
	}
}

output {
	#seperating event type as auth and session via the eventtype
	stdout { codec => json }
	if [eventType] == "auth"{
		elasticsearch {
			hosts => ["http://localhost:9200"]
			#cacert => "/etc/logstash/config/certs/ca.crt"
			user => "wso2user"
			password => "changeme"
			index => "auth"
		}
	} else if [eventType] == "session"{
		elasticsearch {
			hosts => ["http://localhost:9200"]
			#cacert => "/etc/logstash/config/certs/ca.crt"
			user => "wso2user"
			password => "changeme"
			index => "session"
			document_id => "%{[event][payloadData][sessionId]}"
		}
	}

	elasticsearch {
		hosts => ["http://localhost:9200"]
		#cacert => "/etc/logstash/config/certs/ca.crt"
		user => "wso2user"
		password => "changeme"
		index => "test"
		document_id => "%{[event][payloadData][sessionId]}"
	}
}